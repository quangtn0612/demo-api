[{"/Applications/MAMP/htdocs/React/crud-react/src/App.js":"1","/Applications/MAMP/htdocs/React/crud-react/src/components/NavBar.js":"2","/Applications/MAMP/htdocs/React/crud-react/src/reportWebVitals.js":"3","/Applications/MAMP/htdocs/React/crud-react/src/index.js":"4","/Applications/MAMP/htdocs/React/crud-react/src/routes.js":"5","/Applications/MAMP/htdocs/React/crud-react/src/utils/apiCaller.js":"6","/Applications/MAMP/htdocs/React/crud-react/src/constants/config.js":"7","/Applications/MAMP/htdocs/React/crud-react/src/pages/NotFoundPage.js":"8","/Applications/MAMP/htdocs/React/crud-react/src/pages/ProductListPage.js":"9","/Applications/MAMP/htdocs/React/crud-react/src/pages/ProductActionPage.js":"10","/Applications/MAMP/htdocs/React/crud-react/src/pages/HomePage.js":"11","/Applications/MAMP/htdocs/React/crud-react/src/components/ProductItem.js":"12"},{"size":892,"mtime":1611882891230,"results":"13","hashOfConfig":"14"},{"size":895,"mtime":1611608063224,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611574852444,"results":"16","hashOfConfig":"14"},{"size":506,"mtime":1611882996901,"results":"17","hashOfConfig":"14"},{"size":907,"mtime":1611827428721,"results":"18","hashOfConfig":"14"},{"size":305,"mtime":1611803922152,"results":"19","hashOfConfig":"14"},{"size":47,"mtime":1611803992057,"results":"20","hashOfConfig":"14"},{"size":259,"mtime":1611881999367,"results":"21","hashOfConfig":"14"},{"size":2135,"mtime":1611882204728,"results":"22","hashOfConfig":"14"},{"size":3756,"mtime":1611882231401,"results":"23","hashOfConfig":"14"},{"size":183,"mtime":1611881997967,"results":"24","hashOfConfig":"14"},{"size":962,"mtime":1611882883565,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bof5wv",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},"/Applications/MAMP/htdocs/React/crud-react/src/App.js",["53"],"/Applications/MAMP/htdocs/React/crud-react/src/components/NavBar.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/reportWebVitals.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/index.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/routes.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/utils/apiCaller.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/constants/config.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/pages/NotFoundPage.js",[],["54","55"],"/Applications/MAMP/htdocs/React/crud-react/src/pages/ProductListPage.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/pages/ProductActionPage.js",["56","57","58","59"],"import React, { Component } from 'react';\nimport callApi from '../utils/apiCaller';\nimport { Link } from 'react-router-dom';\n\nclass ProductActionPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: '',\n            name: '',\n            price: '',\n            status: '',\n        }\n    }\n\n    componentDidMount() {\n        const { match } = this.props;\n        if(match){\n            const id = match.params.id; //get product id\n            const { name, price, status } = this.state;\n            callApi(`products/${id}`, 'GET', null).then((res) => {\n                this.setState({\n                    id: res.data.id,\n                    name: res.data.name,\n                    price: res.data.price,\n                    status: res.data.status\n                })\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n        \n    }\n\n    onChange = (e) => {\n        let target = e.target;\n        let name = target.name;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        this.setState({\n            [name]: value\n        })\n    }\n    onSave = (e) => {\n        e.preventDefault();\n        const { id, name, price, status } = this.state;\n        const { history, match } = this.props;\n\n        if (id) {\n            callApi(`products/${id}`, 'PUT', { //update\n                name: name,\n                price: price,\n                status: status\n            }).then((res) => {\n                history.push(\"/product\");\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n        else {\n            callApi('products', 'POST', { //add\n                name: name,\n                price: price,\n                status: status\n            }).then((res) => {\n                history.goBack();\n                // history.push(\"/\");\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n\n    }\n    render() {\n\n        var { name, price, status } = this.state;\n        return <div className=\"container\">\n            <form onSubmit={this.onSave}>\n                <div className=\"form-group\">\n                    <label for=\"name\">Product Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"name\"\n                        className=\"form-control\"\n                        value={name}\n                        onChange={this.onChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label for=\"price\">Price</label>\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        id=\"price\"\n                        className=\"form-control\"\n                        value={price}\n                        onChange={this.onChange}\n                    />\n                </div>\n                <div className=\"form-check\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                        id=\"status\"\n                        name=\"status\"\n                        value={status}\n                        onChange={this.onChange}\n                        checked={status}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"status\">Available</label>\n                </div>\n                <Link to=\"/product\" className=\"btn btn-danger\">\n                    Come back!\n                </Link>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    }\n}\nexport default ProductActionPage;","/Applications/MAMP/htdocs/React/crud-react/src/pages/HomePage.js",[],"/Applications/MAMP/htdocs/React/crud-react/src/components/ProductItem.js",["60","61"],"import React, { useState, useEffect, Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ProductItem extends Component {\n  render(){\n    var { product } = this.props;\n    return(\n      <tr>\n          <th scope=\"row\">{product.id}</th>\n          <td>{product.name}</td>\n          <td>{product.price}</td>\n          <td>\n            <span className = {`badge badge-${product.status ? 'warning' : 'default'}`}>\n              {product.status ? 'Available' : 'Sold out'}\n            </span>\n          </td>\n          <td>\n            <Link to={`/product/${product.id}/edit`} className=\"btn btn-primary\">Edit</Link>\n            <button className=\"btn btn-danger\" onClick = {()=>this.onDelete(product.id)}>Delete</button>\n          </td>\n        </tr>\n    )\n  }\n  onDelete(id){\n    if(confirm('Are you sure to delete this item?')) //eslint-disable-line\n    {\n      this.props.onDelete(id);\n    }\n  }\n  onEdit(id){\n\n  }\n}\nexport default ProductItem;",{"ruleId":"62","severity":1,"message":"63","line":8,"column":3,"nodeType":"64","messageId":"65","endLine":8,"endColumn":7},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":20,"column":21,"nodeType":"64","messageId":"65","endLine":20,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":20,"column":27,"nodeType":"64","messageId":"65","endLine":20,"endColumn":32},{"ruleId":"62","severity":1,"message":"72","line":20,"column":34,"nodeType":"64","messageId":"65","endLine":20,"endColumn":40},{"ruleId":"62","severity":1,"message":"73","line":46,"column":26,"nodeType":"64","messageId":"65","endLine":46,"endColumn":31},{"ruleId":"62","severity":1,"message":"74","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"75","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'name' is assigned a value but never used.","'price' is assigned a value but never used.","'status' is assigned a value but never used.","'match' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]